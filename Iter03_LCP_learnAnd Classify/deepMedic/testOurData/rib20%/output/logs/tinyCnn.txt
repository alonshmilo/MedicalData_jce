2017-05-11 20:35:10.229044 >> CONFIG: The configuration file for the model-creation session was loaded from: /Users/stavbarazani/Documents/deepmedic/ribCnn/configFiles/tinyCnn/model/modelConfig.cfg
2017-05-11 20:35:10.229500 >> 
===========    NEW CREATE-MODEL SESSION    ============
2017-05-11 20:35:10.231414 >> =============================================================
2017-05-11 20:35:10.231697 >> =============== PARAMETERS FOR MODEL CREATION ===============
2017-05-11 20:35:10.232605 >> =============================================================
2017-05-11 20:35:10.232990 >> CNN model's name = tinyCnn
2017-05-11 20:35:10.236187 >> Main output folder = /Users/stavbarazani/Documents/deepmedic/ribCnn/output
2017-05-11 20:35:10.236420 >> Path and filename to save model = /Users/stavbarazani/Documents/deepmedic/ribCnn/output/cnnModels/tinyCnn
2017-05-11 20:35:10.236563 >> ~~~~~~~~~~~~~~~~~~Model parameters~~~~~~~~~~~~~~~~
2017-05-11 20:35:10.236667 >> Number of Classes (including background) = 2
2017-05-11 20:35:10.236799 >> ~~Normal Pathway~~
2017-05-11 20:35:10.236932 >> Number of Input Channels = 1
2017-05-11 20:35:10.237063 >> Number of Layers = 3
2017-05-11 20:35:10.237210 >> Number of Feature Maps per layer = [4, 5, 6]
2017-05-11 20:35:10.237313 >> Kernel Dimensions per layer = [[3, 3, 3], [3, 3, 3], [3, 3, 3]]
2017-05-11 20:35:10.237407 >> Receptive Field = [7, 7, 7]
2017-05-11 20:35:10.237492 >> Residual connections added at the output of layers (indices from 0) = []
2017-05-11 20:35:10.237624 >> Layers that will be made of Lower Rank (indices from 0) = []
2017-05-11 20:35:10.237795 >> Lower Rank layers will be made of rank = []
2017-05-11 20:35:10.237897 >> ~~Subsampled Pathway~~
2017-05-11 20:35:10.238012 >> Use subsampled Pathway = False
2017-05-11 20:35:10.238139 >> Number of subsampled pathways that will be built = 0
2017-05-11 20:35:10.238252 >> Number of Layers (per sub-pathway) = []
2017-05-11 20:35:10.238465 >> Number of Feature Maps per layer (per sub-pathway) = []
2017-05-11 20:35:10.238586 >> Kernel Dimensions per layer = []
2017-05-11 20:35:10.238769 >> Receptive Field = []
2017-05-11 20:35:10.238873 >> Subsampling Factor per dimension (per sub-pathway) = []
2017-05-11 20:35:10.239077 >> Residual connections added at the output of layers (indices from 0) = []
2017-05-11 20:35:10.239273 >> Layers that will be made of Lower Rank (indices from 0) = []
2017-05-11 20:35:10.239389 >> Lower Rank layers will be made of rank = []
2017-05-11 20:35:10.239479 >> ~~Fully Connected Pathway~~
2017-05-11 20:35:10.239742 >> Number of additional FC layers (Excluding the Classif. Layer) = 0
2017-05-11 20:35:10.240147 >> Number of Feature Maps in the additional FC layers = []
2017-05-11 20:35:10.240331 >> Residual connections added at the output of layers (indices from 0) = []
2017-05-11 20:35:10.240574 >> Layers that will be made of Lower Rank (indices from 0) = []
2017-05-11 20:35:10.240752 >> Dimensions of Kernels in the 1st FC layer (Classif. layer if no hidden FCs used) = [1, 1, 1]
2017-05-11 20:35:10.240846 >> ~~Size Of Image Segments~~
2017-05-11 20:35:10.241016 >> Size of Segments for Training = [25, 25, 25]
2017-05-11 20:35:10.241212 >> Size of Segments for Validation = [7, 7, 7]
2017-05-11 20:35:10.241331 >> Size of Segments for Testing = [45, 45, 45]
2017-05-11 20:35:10.241420 >> ~~Batch Sizes~~
2017-05-11 20:35:10.241497 >> Batch Size for Training = 10
2017-05-11 20:35:10.241599 >> Batch Size for Validation = 50
2017-05-11 20:35:10.241673 >> Batch Size for Testing = 10
2017-05-11 20:35:10.241799 >> ~~Dropout Rates~~
2017-05-11 20:35:10.241919 >> Drop.R. for each layer in Normal Pathway = []
2017-05-11 20:35:10.242055 >> Drop.R. for each layer in Subsampled Pathway = []
2017-05-11 20:35:10.242159 >> Drop.R. for each layer in FC Pathway (additional FC layers + Classific.Layer at end) = [0.5]
2017-05-11 20:35:10.242222 >> ~~Weight Initialization~~
2017-05-11 20:35:10.242306 >> Classic random N(0,0.01) initialization (0), or ala "Delving Into Rectifier" (1) = 1
2017-05-11 20:35:10.242385 >> ~~Activation Function~~
2017-05-11 20:35:10.242525 >> ReLU (0), or PReLU (1) = 1
2017-05-11 20:35:10.242610 >> ~~Batch Normalization~~
2017-05-11 20:35:10.242775 >> Apply BN straight on pathways' inputs (eg straight on segments) = [False, False, True, False]
2017-05-11 20:35:10.242916 >> Batch Normalization uses a rolling average for inference, over this many batches = 60
2017-05-11 20:35:10.243044 >> ========== Done with printing session's parameters ==========
2017-05-11 20:35:10.243148 >> =============================================================
2017-05-11 20:35:10.243360 >> 
=========== Creating the CNN model ===============
2017-05-11 20:35:10.245617 >> ...Building the CNN model...
2017-05-11 20:35:10.249554 >> [Pathway_NORMAL] is being built...
2017-05-11 20:35:10.249799 >> 	[Pathway_NORMAL]: Input's Shape: (Train) [10, 1, 25, 25, 25], (Val) [50, 1, 7, 7, 7], (Test) [10, 1, 45, 45, 45]
2017-05-11 20:35:10.252821 >> 	[Conv.Layer_0], Filter Shape: [4, 1, 3, 3, 3]
2017-05-11 20:35:10.253005 >> 	[Conv.Layer_0], Input's Shape: (Train) [10, 1, 25, 25, 25], (Val) [50, 1, 7, 7, 7], (Test) [10, 1, 45, 45, 45]
2017-05-11 20:35:10.344175 >> 	[Conv.Layer_1], Filter Shape: [5, 4, 3, 3, 3]
2017-05-11 20:35:10.344376 >> 	[Conv.Layer_1], Input's Shape: (Train) [10, 4, 23, 23, 23], (Val) [50, 4, 5, 5, 5], (Test) [10, 4, 43, 43, 43]
2017-05-11 20:35:10.421185 >> 	[Conv.Layer_2], Filter Shape: [6, 5, 3, 3, 3]
2017-05-11 20:35:10.421333 >> 	[Conv.Layer_2], Input's Shape: (Train) [10, 5, 21, 21, 21], (Val) [50, 5, 3, 3, 3], (Test) [10, 5, 41, 41, 41]
2017-05-11 20:35:10.519246 >> 	[Pathway_NORMAL]: Output's Shape: (Train) [10, 6, 19, 19, 19], (Val) [50, 6, 1, 1, 1], (Test) [10, 6, 39, 39, 39]
2017-05-11 20:35:10.519452 >> [Pathway_NORMAL] done.
2017-05-11 20:35:10.521368 >> DEBUG: Shape of the kernel of the first FC layer is : [1, 1, 1]
2017-05-11 20:35:10.521527 >> DEBUG: Input to the FC Pathway will be padded by that many voxels per dimension: [0, 0, 0]
2017-05-11 20:35:10.521856 >> [Pathway_FC] is being built...
2017-05-11 20:35:10.521999 >> 	[Pathway_FC]: Input's Shape: (Train) [10, 6, 19, 19, 19], (Val) [50, 6, 1, 1, 1], (Test) [10, 6, 39, 39, 39]
2017-05-11 20:35:10.522277 >> 	[Conv.Layer_0], Filter Shape: [2, 6, 1, 1, 1]
2017-05-11 20:35:10.522414 >> 	[Conv.Layer_0], Input's Shape: (Train) [10, 6, 19, 19, 19], (Val) [50, 6, 1, 1, 1], (Test) [10, 6, 39, 39, 39]
2017-05-11 20:35:10.629838 >> 	[Pathway_FC]: Output's Shape: (Train) [10, 2, 19, 19, 19], (Val) [50, 2, 1, 1, 1], (Test) [10, 2, 39, 39, 39]
2017-05-11 20:35:10.630006 >> [Pathway_FC] done.
2017-05-11 20:35:10.631984 >> Adding the final Softmax Target layer...
2017-05-11 20:35:10.646986 >> Finished building the CNN's model.
2017-05-11 20:35:10.647170 >> 
=========== Saving the model ===============
2017-05-11 20:35:10.649212 >> Saving network to: /Users/stavbarazani/Documents/deepmedic/ribCnn/output/cnnModels/tinyCnn.initial.2017-05-11.20.35.10.649049.save
2017-05-11 20:35:10.913387 >> Model saved.
2017-05-11 20:35:10.913498 >> =========== Creation of the model: "tinyCnn" finished =================
