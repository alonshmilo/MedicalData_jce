2017-05-09 10:46:12.600511 >> CONFIG: The configuration file for the model-creation session was loaded from: /Users/stavbarazani/Documents/Deep-Medic/deepmedic/rib/configFiles/tinyCnn/model/modelConfig.cfg
2017-05-09 10:46:12.604034 >> ===========    NEW CREATE-MODEL SESSION    ============
2017-05-09 10:46:12.604167 >> =============================================================
2017-05-09 10:46:12.605060 >> =============== PARAMETERS FOR MODEL CREATION ===============
2017-05-09 10:46:12.605250 >> =============================================================
2017-05-09 10:46:12.605341 >> CNN model's name = tinyCnn
2017-05-09 10:46:12.605569 >> Main output folder = /Users/stavbarazani/Documents/Deep-Medic/deepmedic/rib/output
2017-05-09 10:46:12.605719 >> Path and filename to save model = /Users/stavbarazani/Documents/Deep-Medic/deepmedic/rib/output/cnnModels/tinyCnn
2017-05-09 10:46:12.605852 >> ~~~~~~~~~~~~~~~~~~Model parameters~~~~~~~~~~~~~~~~
2017-05-09 10:46:12.606035 >> Number of Classes (including background) = 2
2017-05-09 10:46:12.606129 >> ~~Normal Pathway~~
2017-05-09 10:46:12.606598 >> Number of Input Channels = 1
2017-05-09 10:46:12.606715 >> Number of Layers = 3
2017-05-09 10:46:12.606971 >> Number of Feature Maps per layer = [4, 5, 6]
2017-05-09 10:46:12.607177 >> Kernel Dimensions per layer = [[3, 3, 3], [3, 3, 3], [3, 3, 3]]
2017-05-09 10:46:12.607318 >> Receptive Field = [7, 7, 7]
2017-05-09 10:46:12.607682 >> Residual connections added at the output of layers (indices from 0) = []
2017-05-09 10:46:12.607789 >> Layers that will be made of Lower Rank (indices from 0) = []
2017-05-09 10:46:12.608214 >> Lower Rank layers will be made of rank = []
2017-05-09 10:46:12.609187 >> ~~Subsampled Pathway~~
2017-05-09 10:46:12.613019 >> Use subsampled Pathway = False
2017-05-09 10:46:12.613789 >> Number of Layers = 0
2017-05-09 10:46:12.613933 >> Number of Feature Maps per layer = []
2017-05-09 10:46:12.614095 >> Kernel Dimensions per layer = []
2017-05-09 10:46:12.614262 >> Receptive Field = []
2017-05-09 10:46:12.614365 >> Subsampling Factor = []
2017-05-09 10:46:12.614553 >> Residual connections added at the output of layers (indices from 0) = []
2017-05-09 10:46:12.614798 >> Layers that will be made of Lower Rank (indices from 0) = []
2017-05-09 10:46:12.614951 >> Lower Rank layers will be made of rank = []
2017-05-09 10:46:12.615133 >> ~~Fully Connected Pathway~~
2017-05-09 10:46:12.615323 >> Number of additional FC layers (Excluding the Classif. Layer) = 0
2017-05-09 10:46:12.615471 >> Number of Feature Maps in the additional FC layers = []
2017-05-09 10:46:12.615688 >> Residual connections added at the output of layers (indices from 0) = []
2017-05-09 10:46:12.615808 >> Layers that will be made of Lower Rank (indices from 0) = []
2017-05-09 10:46:12.615999 >> Dimensions of Kernels in the 1st FC layer (Classif. layer if no hidden FCs used) = [1, 1, 1]
2017-05-09 10:46:12.616151 >> ~~Size Of Image Segments~~
2017-05-09 10:46:12.616311 >> Size of Segments for Training = [25, 25, 25]
2017-05-09 10:46:12.616478 >> Size of Segments for Validation = [7, 7, 7]
2017-05-09 10:46:12.616566 >> Size of Segments for Testing = [45, 45, 45]
2017-05-09 10:46:12.616636 >> ~~Size Of Image Segments (Subsampled, auto-calculated)~~
2017-05-09 10:46:12.616801 >> Size of Segments for Training (Subsampled) = []
2017-05-09 10:46:12.616929 >> Size of Segments for Validation (Subsampled) = []
2017-05-09 10:46:12.617034 >> Size of Segments for Testing (Subsampled) = []
2017-05-09 10:46:12.617114 >> ~~Batch Sizes~~
2017-05-09 10:46:12.617333 >> Batch Size for Training = 10
2017-05-09 10:46:12.617426 >> Batch Size for Validation = 50
2017-05-09 10:46:12.617589 >> Batch Size for Testing = 10
2017-05-09 10:46:12.617789 >> ~~Dropout Rates~~
2017-05-09 10:46:12.617873 >> Drop.R. for each layer in Normal Pathway = []
2017-05-09 10:46:12.617990 >> Drop.R. for each layer in Subsampled Pathway = []
2017-05-09 10:46:12.618088 >> Drop.R. for each layer in FC Pathway (additional FC layers + Classific.Layer at end) = [0.5]
2017-05-09 10:46:12.618163 >> ~~L1/L2 Regularization~~
2017-05-09 10:46:12.618343 >> L1 Regularization term = 1e-06
2017-05-09 10:46:12.618430 >> L2 Regularization term = 0.0001
2017-05-09 10:46:12.618498 >> ~~Weight Initialization~~
2017-05-09 10:46:12.618655 >> Classic random N(0,0.01) initialization (0), or ala "Delving Into Rectifier" (1) = 1
2017-05-09 10:46:12.618748 >> ~~Activation Function~~
2017-05-09 10:46:12.618877 >> ReLU (0), or PReLU (1) = 1
2017-05-09 10:46:12.618965 >> ~~Batch Normalization~~
2017-05-09 10:46:12.619085 >> Apply BN straight on pathways' inputs (eg straight on segments) = [False, False, 'Placeholder', False]
2017-05-09 10:46:12.619213 >> Batch Normalization uses a rolling average for inference, over this many batches = 60
2017-05-09 10:46:12.619319 >> ~~Optimization~~
2017-05-09 10:46:12.619400 >> Initial Learning rate = 0.001
2017-05-09 10:46:12.619526 >> Optimizer to use: SGD(0), Adam(1), RmsProp(2) = 2
2017-05-09 10:46:12.619649 >> Parameters for Adam: b1= placeholder, b2=placeholder, e= placeholder
2017-05-09 10:46:12.619743 >> Parameters for RmsProp: rho= 0.9, e= 0.0001
2017-05-09 10:46:12.619866 >> Momentum Type: Classic (0) or Nesterov (1) = 1
2017-05-09 10:46:12.619949 >> Momentum Non-Normalized (0) or Normalized (1) = 1
2017-05-09 10:46:12.620108 >> Momentum Value = 0.6
2017-05-09 10:46:12.620217 >> ========== Done with printing session's parameters ==========
2017-05-09 10:46:12.620327 >> =============================================================
2017-05-09 10:46:12.620416 >> =========== Creating the CNN model ===============
2017-05-09 10:46:12.621752 >> ...Building the CNN model...
2017-05-09 10:46:12.843126 >> DEBUG: Shape of output of the FIRST PATH: (Train) [10, 6, 19, 19, 19], (Val) [50, 6, 1, 1, 1], (Test) [10, 6, 39, 39, 39]
2017-05-09 10:46:12.843366 >> DEBUG: Shape of the kernel of the first FC layer is : [1, 1, 1]
2017-05-09 10:46:12.843650 >> DEBUG: Shape of input to the FC PATH: (Train) [10, 6, 19, 19, 19], (Val) [50, 6, 1, 1, 1], (Test) [10, 6, 39, 39, 39]
2017-05-09 10:46:12.843926 >> DEBUG: Filter Shape of the final-FC-classification Layer: [2, 6, 1, 1, 1]
2017-05-09 10:46:12.844085 >> DEBUG: Shape of input to the Classification layer: (Train) [10, 6, 19, 19, 19], (Val) [50, 6, 1, 1, 1], (Test) [10, 6, 39, 39, 39]
2017-05-09 10:46:12.943077 >> Finished building the CNN's model.
2017-05-09 10:46:12.943289 >> Setting the training-related attributes of the CNN.
2017-05-09 10:46:12.945231 >> UPDATE: (epoch-cnn-trained#0) Changing the Cnn's Learning Rate to: 0.001
2017-05-09 10:46:12.945541 >> UPDATE: (epoch-cnn-trained#0) Changing the Cnn's Momentum to: 0.6
2017-05-09 10:46:12.945681 >> UPDATE: (epoch-cnn-trained#0) Changing the Cnn's Rho parameter for RMSProp optimization to: Rho = 0.9
2017-05-09 10:46:12.945890 >> ...Building the training function...
2017-05-09 10:46:12.973751 >> Optimizer used: [RMSProp]. Momentum used: Classic0 or Nesterov1 : 1
2017-05-09 10:46:13.647207 >> ...Compiling the function for training... (This may take a few minutes...)
2017-05-09 10:46:25.852289 >> The training function was compiled.
2017-05-09 10:46:25.854381 >> ...Building the validation function...
2017-05-09 10:46:25.859409 >> ...Compiling the function for validation... (This may take a few minutes...)
2017-05-09 10:46:26.897729 >> The validation function was compiled.
2017-05-09 10:46:26.897892 >> ...Building the function for testing and visualisation of FMs...
2017-05-09 10:46:26.903945 >> ...Compiling the function for testing and visualisation of FMs... (This may take a few minutes...)
2017-05-09 10:46:28.134648 >> The function for testing and visualisation of FMs was compiled.
2017-05-09 10:46:28.135072 >> Saving network to: /Users/stavbarazani/Documents/Deep-Medic/deepmedic/rib/output/cnnModels/tinyCnn.initial.2017-05-09.10.46.28.134769.save
2017-05-09 10:46:30.596560 >> Model saved.
2017-05-09 10:46:30.596816 >> =========== Creation of the model: "tinyCnn" finished =================
