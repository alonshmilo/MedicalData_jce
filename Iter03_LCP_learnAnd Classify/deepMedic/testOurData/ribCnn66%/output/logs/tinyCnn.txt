2017-06-18 12:52:39.536427 >> CONFIG: The configuration file for the model-creation session was loaded from: /Users/stavbarazani/Documents/deepmedic/ribCnn/configFiles/tinyCnn/model/modelConfig.cfg
2017-06-18 12:52:39.537215 >> 
===========    NEW CREATE-MODEL SESSION    ============
2017-06-18 12:52:39.539073 >> =============================================================
2017-06-18 12:52:39.539271 >> =============== PARAMETERS FOR MODEL CREATION ===============
2017-06-18 12:52:39.539451 >> =============================================================
2017-06-18 12:52:39.539628 >> CNN model's name = tinyCnn
2017-06-18 12:52:39.539802 >> Main output folder = /Users/stavbarazani/Documents/deepmedic/ribCnn/output
2017-06-18 12:52:39.539952 >> Path and filename to save model = /Users/stavbarazani/Documents/deepmedic/ribCnn/output/cnnModels/tinyCnn
2017-06-18 12:52:39.540091 >> ~~~~~~~~~~~~~~~~~~Model parameters~~~~~~~~~~~~~~~~
2017-06-18 12:52:39.540244 >> Number of Classes (including background) = 2
2017-06-18 12:52:39.540447 >> ~~Normal Pathway~~
2017-06-18 12:52:39.540605 >> Number of Input Channels = 1
2017-06-18 12:52:39.540824 >> Number of Layers = 3
2017-06-18 12:52:39.541004 >> Number of Feature Maps per layer = [4, 5, 6]
2017-06-18 12:52:39.541177 >> Kernel Dimensions per layer = [[3, 3, 3], [3, 3, 3], [3, 3, 3]]
2017-06-18 12:52:39.541383 >> Receptive Field = [7, 7, 7]
2017-06-18 12:52:39.541602 >> Residual connections added at the output of layers (indices from 0) = []
2017-06-18 12:52:39.541778 >> Layers that will be made of Lower Rank (indices from 0) = []
2017-06-18 12:52:39.541955 >> Lower Rank layers will be made of rank = []
2017-06-18 12:52:39.542095 >> ~~Subsampled Pathway~~
2017-06-18 12:52:39.542308 >> Use subsampled Pathway = False
2017-06-18 12:52:39.542500 >> Number of subsampled pathways that will be built = 0
2017-06-18 12:52:39.542620 >> Number of Layers (per sub-pathway) = []
2017-06-18 12:52:39.542731 >> Number of Feature Maps per layer (per sub-pathway) = []
2017-06-18 12:52:39.542853 >> Kernel Dimensions per layer = []
2017-06-18 12:52:39.542963 >> Receptive Field = []
2017-06-18 12:52:39.543080 >> Subsampling Factor per dimension (per sub-pathway) = []
2017-06-18 12:52:39.543207 >> Residual connections added at the output of layers (indices from 0) = []
2017-06-18 12:52:39.543336 >> Layers that will be made of Lower Rank (indices from 0) = []
2017-06-18 12:52:39.543467 >> Lower Rank layers will be made of rank = []
2017-06-18 12:52:39.543597 >> ~~Fully Connected Pathway~~
2017-06-18 12:52:39.543754 >> Number of additional FC layers (Excluding the Classif. Layer) = 0
2017-06-18 12:52:39.543889 >> Number of Feature Maps in the additional FC layers = []
2017-06-18 12:52:39.544044 >> Residual connections added at the output of layers (indices from 0) = []
2017-06-18 12:52:39.544175 >> Layers that will be made of Lower Rank (indices from 0) = []
2017-06-18 12:52:39.544368 >> Dimensions of Kernels in the 1st FC layer (Classif. layer if no hidden FCs used) = [1, 1, 1]
2017-06-18 12:52:39.544529 >> ~~Size Of Image Segments~~
2017-06-18 12:52:39.544660 >> Size of Segments for Training = [25, 25, 25]
2017-06-18 12:52:39.544862 >> Size of Segments for Validation = [7, 7, 7]
2017-06-18 12:52:39.545151 >> Size of Segments for Testing = [45, 45, 45]
2017-06-18 12:52:39.545321 >> ~~Batch Sizes~~
2017-06-18 12:52:39.545405 >> Batch Size for Training = 10
2017-06-18 12:52:39.545468 >> Batch Size for Validation = 50
2017-06-18 12:52:39.545595 >> Batch Size for Testing = 10
2017-06-18 12:52:39.545723 >> ~~Dropout Rates~~
2017-06-18 12:52:39.545910 >> Drop.R. for each layer in Normal Pathway = []
2017-06-18 12:52:39.546062 >> Drop.R. for each layer in Subsampled Pathway = []
2017-06-18 12:52:39.546252 >> Drop.R. for each layer in FC Pathway (additional FC layers + Classific.Layer at end) = [0.5]
2017-06-18 12:52:39.546419 >> ~~Weight Initialization~~
2017-06-18 12:52:39.546549 >> Classic random N(0,0.01) initialization (0), or ala "Delving Into Rectifier" (1) = 1
2017-06-18 12:52:39.546674 >> ~~Activation Function~~
2017-06-18 12:52:39.546800 >> ReLU (0), or PReLU (1) = 1
2017-06-18 12:52:39.546942 >> ~~Batch Normalization~~
2017-06-18 12:52:39.547092 >> Apply BN straight on pathways' inputs (eg straight on segments) = [False, False, True, False]
2017-06-18 12:52:39.547227 >> Batch Normalization uses a rolling average for inference, over this many batches = 60
2017-06-18 12:52:39.547350 >> ========== Done with printing session's parameters ==========
2017-06-18 12:52:39.547466 >> =============================================================
2017-06-18 12:52:39.547607 >> 
=========== Creating the CNN model ===============
2017-06-18 12:52:39.548391 >> ...Building the CNN model...
2017-06-18 12:52:39.549252 >> [Pathway_NORMAL] is being built...
2017-06-18 12:52:39.551703 >> 	[Pathway_NORMAL]: Input's Shape: (Train) [10, 1, 25, 25, 25], (Val) [50, 1, 7, 7, 7], (Test) [10, 1, 45, 45, 45]
2017-06-18 12:52:39.551878 >> 	[Conv.Layer_0], Filter Shape: [4, 1, 3, 3, 3]
2017-06-18 12:52:39.552034 >> 	[Conv.Layer_0], Input's Shape: (Train) [10, 1, 25, 25, 25], (Val) [50, 1, 7, 7, 7], (Test) [10, 1, 45, 45, 45]
2017-06-18 12:52:39.605189 >> 	[Conv.Layer_1], Filter Shape: [5, 4, 3, 3, 3]
2017-06-18 12:52:39.605454 >> 	[Conv.Layer_1], Input's Shape: (Train) [10, 4, 23, 23, 23], (Val) [50, 4, 5, 5, 5], (Test) [10, 4, 43, 43, 43]
2017-06-18 12:52:39.669329 >> 	[Conv.Layer_2], Filter Shape: [6, 5, 3, 3, 3]
2017-06-18 12:52:39.669534 >> 	[Conv.Layer_2], Input's Shape: (Train) [10, 5, 21, 21, 21], (Val) [50, 5, 3, 3, 3], (Test) [10, 5, 41, 41, 41]
2017-06-18 12:52:39.725976 >> 	[Pathway_NORMAL]: Output's Shape: (Train) [10, 6, 19, 19, 19], (Val) [50, 6, 1, 1, 1], (Test) [10, 6, 39, 39, 39]
2017-06-18 12:52:39.726209 >> [Pathway_NORMAL] done.
2017-06-18 12:52:39.728143 >> DEBUG: Shape of the kernel of the first FC layer is : [1, 1, 1]
2017-06-18 12:52:39.728315 >> DEBUG: Input to the FC Pathway will be padded by that many voxels per dimension: [0, 0, 0]
2017-06-18 12:52:39.728720 >> [Pathway_FC] is being built...
2017-06-18 12:52:39.728923 >> 	[Pathway_FC]: Input's Shape: (Train) [10, 6, 19, 19, 19], (Val) [50, 6, 1, 1, 1], (Test) [10, 6, 39, 39, 39]
2017-06-18 12:52:39.729316 >> 	[Conv.Layer_0], Filter Shape: [2, 6, 1, 1, 1]
2017-06-18 12:52:39.729621 >> 	[Conv.Layer_0], Input's Shape: (Train) [10, 6, 19, 19, 19], (Val) [50, 6, 1, 1, 1], (Test) [10, 6, 39, 39, 39]
2017-06-18 12:52:39.792613 >> 	[Pathway_FC]: Output's Shape: (Train) [10, 2, 19, 19, 19], (Val) [50, 2, 1, 1, 1], (Test) [10, 2, 39, 39, 39]
2017-06-18 12:52:39.792799 >> [Pathway_FC] done.
2017-06-18 12:52:39.794889 >> Adding the final Softmax Target layer...
2017-06-18 12:52:39.802829 >> Finished building the CNN's model.
2017-06-18 12:52:39.803079 >> 
=========== Saving the model ===============
2017-06-18 12:52:39.805024 >> Saving network to: /Users/stavbarazani/Documents/deepmedic/ribCnn/output/cnnModels/tinyCnn.initial.2017-06-18.12.52.39.804893.save
2017-06-18 12:52:39.986686 >> Model saved.
2017-06-18 12:52:39.986811 >> =========== Creation of the model: "tinyCnn" finished =================
