#Default values are set internally, if the corresponding parameter is not found in the configuration file.

#[Optional but highly suggested] The name will be used in the filenames when saving the model.
#Default: "cnnModel"
modelName = "deepMedicLess"

#[Required] The main folder that the output will be placed.
folderForOutput = "../../../output/"


#================ MODEL PARAMETERS =================

#[Required] The number of classes in the task. Including background!
numberOfOutputClasses = 5
#[Required] The number of input channels, eg number of MRI modalities.
numberOfInputChannels = 2

#+++++++++++Normal pathway+++++++++++
#[Required] This list should have as many entries as the number of layers I want the normal-pathway to have.
#Each entry is an integer that specifies the number of Feature Maps to use in each of the layers.
numberFMsPerLayerNormal = [30, 30, 40, 40, 40, 40, 50, 50]
#[Required] This list should have as many entries as the number of layers in the normal pathway.
#Each entry should be a sublist with 3 entries. These should specify the dimensions of the kernel at the corresponding layer.
kernelDimPerLayerNormal = [[3,3,3], [3,3,3], [3,3,3], [3,3,3], [3,3,3], [3,3,3], [3,3,3], [3,3,3]]

#+++++++++++Subsampled pathway+++++++++++
#[Optional] Specify whether to use a subsampled pathway. If False, all subsampled-related parameters will be read but disregarded in the model-construction.
#Default: False
useSubsampledPathway = True

#+++++++++++FC Layers+++++++++++
#[Optional] After the last layers of the normal and subsampled pathways are concatenated, additional Fully Connected hidden layers can be added before the final classification layer.
#Specify a list, with as many entries as the number of ADDITIONAL FC layers (other than the classification layer) to add. The entries specify the number of Feature Maps to use.
#Default: []
numberFMsPerLayerFC = [150, 150]

#+++++++++++Size of Image Segments+++++++++++
#DeepMedic does not process patches of the image, but larger image-segments. Specify their size here.

#[Required] Size of training segments influence the captured distribution of samples from the different classes (see DeepMedic paper)
segmentsDimTrain = [25,25,25]
#[Optional] The size of segments to use during the validation-on-samples process that is performed throughout training if requested.
#Default: equal to receptive field, to validate on patches.
segmentsDimVal = [17,17,17]
#[Optional] Bigger image segments for Inference are safe to use and only speed up the process. Only limitation is the GPU memory.
#Default: equal to the training segment.
segmentsDimInference = [45,45,45]

#+++++++++++Batch Sizes+++++++++++
#[Required] The number of segments to create a batch.
#The samples in a training-batch are all processed and one optimization step is performed.
#Larger batches approximate the total data better and should positively impact optimization but are computationally more expensive (time and memory).
batchSizeTrain = 10
#[Optionals] Batch sizes for validation and inference only influence the speed. The bigger the better. Depends on the segment size and the model size how big batches can be fit in memory.
#Default: Equal to train-batch size.
batchSizeVal = 48
batchSizeInfer = 10

#[Optionals] Regularization L1 and L2.
#Defaults: L1_reg = 0.000001, L2_reg = 0.0001
L1_reg = 0.000001
L2_reg = 0.0001

#[Optional] Initialization method of the kernel weights. Specify 0 for classic, from the normal distribution N(0, 0.01). Otherwise specify 1 for the method of He et al from "Delving Deep into Rectifiers".
#Default: 1
initializeClassic0orDelving1 = 1
#[Optional] Activation Function for all convolutional layers. Specify 0 for ReLU, 1 for PreLU.
#Default: 1
relu0orPrelu1 = 1

#+++++++++++Optimization+++++++++++
#[Optionals]
#Initial Learning Rate. Default: 0.001.
learningRate = 0.001
#Optimizer to use. 0 for classic SGD, 1 for Adam, 2 for RmsProp. Default: 2
sgd0orAdam1orRms2 = 2
#Type of momentum to use. 0 for standard momentum, 1 for Nesterov. Default: 1
classicMom0OrNesterov1 = 1
#Momentum Value to use. Default: 0.6
momentumValue = 0.6
#Non-Normalized (0) or Normalized momentum (1). Bear in mind that Normalized mom may result in smaller gradients and might need relatively higher Learning Rate. Default: 1
momNonNorm0orNormalized1 = 1
#Parameters for RmsProp. Default: rho=0.9, e=10**(-4) (1e-6 blew up the gradients. Haven't tried 1e-5 yet).
rhoRms = 0.9
epsilonRms = 10**(-4)

